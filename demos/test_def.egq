// See how default args handle byref values

let f = function(*args) {
    let a = "hello";
    if (length(args)>0)
        a = args[0];
    return a + " world";
};

let helloworld = f();
helloworld += "!";
let helloagain = f();

print("These *should* be different...");
print("\t{}\n\t{}".format(helloworld, helloagain));

(function() {
    let o = function(*args) {
        let a=null;
        if (length(args) > 0)
            a = args[0];

        let old_or_new = function(a) {
            if (a == null)
                return {};
            return a;
        };
        let b = old_or_new(a);

        b.a = 'a';
        b.b = 'b';
        return b;
    };

    let printobj = function(obj) {
        print("Printing object");
        obj.foreach(function(e, s, priv) {
            print("\t{}: {}".format(s, e));
        });
    };

    let a = o();
    a.a = 'x';
    let b = o();
    let c =  { d: 1 };
    let d = o(c);
    print("A");
    printobj(a);
    print("B (should be different from A)");
    printobj(b);
    print("D");
    printobj(d);
    print("C (should be same as D)");
    printobj(c);
})();

let g = function(**args) {
    let a = { 'name': 'billy', 'age': 12 } | args;
    print(a.name, 'age', a.age);
};

print("Expect: billy age 12:");
g();
print("Expect: me age 45:");
g(name='me', age=45);

// : vim: set syntax=javascript :
