#!./evilcandy
// Expect output "1 + 2 is 3"
let a = (function(a, b) { return a + b; })(1, 2);
print("1 + 2 is", a);

// Expect output "args are alice and bob"
(function(a, b) {
    print("args are", a, "and", b);
})("alice", "bob");

// Test closure
(function() {
    let multer = function(n) {
        return ``(x) x * n``;
    };

    let doubler = multer(2);
    let tripler = multer(3);
    let quadler = multer(4);
    let quintler = multer(5);
    let sextler = multer(6);
    let septler = multer(7);

    print("testing simple closure");
    print("\t11 times 2 is {}".format(doubler(11)));
    print("\t11 times 3 is {}".format(tripler(11)));
    print("\t11 times 4 is {}".format(quadler(11)));
    print("\t11 times 5 is {}".format(quintler(11)));
    print("\t11 times 6 is {}".format(sextler(11)));
    print("\t11 times 7 is {}".format(septler(11)));
})();

// Test byval-ness of closure

if (false) {
    (function() {
        let n = 1;
        let catworld = function() {
            n++;
            return n;
        };
        let two = catworld();
        let three = catworld();
        print("{} {} {}".format(n, two, three));
    })();
}


// : vim: set syntax=javascript :
