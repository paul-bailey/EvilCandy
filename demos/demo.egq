#!./evilcandy

(function(iterator) {
    iterator['whoami'] = function() {
        print("me, of course!");
    };
    iterator.tonine(4);
    print("That was to nine. This is to ten:");
    iterator.toten(4);
    print("Who am I?");
    iterator.whoami();
    print("iterator.len()=={}".format(iterator.len()));
})({
    tonine: function(x) {
        for (let n = 10; x < n; x++)
                print("\titerator.tonine: x is {}".format(x));
    },

    toten: function(x) {
        let n = 11;
        do {
            print("\titerator.toten: x is {}".format(x));
            x++;
        } while (x < n);

    }
});

(function() {
    print("Some mathy stuff:");
    print("\tpi is: {}".format(Math.pi));
    (function(mypow) {
        print("\tMy Pow: 4^4 = {}".format(mypow(4, 4)));
    })(function(x, y) {
        if (typeof(x) != "integer" || typeof(y) != "integer") {
            print("wrong type!");
            return 0.0;
        }
        if (y <= 0) {
            // these are ints, so negative powers always
            // evaluate to zero.
            return 0;
        }
        let res = x;
        while (y > 1) {
            res = res * x;
            y = y - 1;
        }
        return res;
    });

    (function(pow) {
        print("\tLib Pow: 4^4 = {}".format(pow(4, 4)));
    })(``(x, y) Math.pow(x, y)``);
})();

(function(s) {
    print("length '{}' for '{}'".format(s.len(), s));
    print("length {} should equal {}".format(s.len(), len(s)));
    print("Replace 'is' with 'at':");
    print("\tOld text: '{}'\n\tNew text: '{}'"
          .format(s, s.replace("is", "at")));
})('This is a string');

print("Length of __gbl__ is {} (ie. func len() without arg)"
      .format(len()));

print("");
print("~0xfffffffffffffffa is {}".format(~0xfffffffffffffffa));
print("~0 is {}".format(~0));


print("");
print("Now here's a test of foreach:");
print("I'm gonna print the typeof(e) for each e in __gbl__");
__gbl__.foreach(function (e, name) {
    print("\tType={}, name={}".format(typeof(e), name));
});

(function(s) {
    print("Does gbl have child '{}'?".format(s));
    if (__gbl__.hasattr(s))
        print("\t...yes!");
    else
        print("\t...no :(");
    print("Does gbl have child 'Io'?");
    if (hasattr('Io'))
        print("\t...yes!");
    else
        print("\t...nope");
})('MarioBros');

print("UTF-8/ANSI escape test");
print("\tValues of \u03b2 will give rise to dom!");
let s = "Be \U0001f600!";
print("\tLength of '{}' is {}, idx#3='{}', idx#4='{}'"
      .format(s, s.len(), s[3], s[4]));
let COLOR_RED = '\033[31m';
let COLOR_DEF = '\033[39m';
print("\tAm I " + COLOR_RED + 'RED' + COLOR_DEF + "???");
// : vim: set syntax=javascript :
