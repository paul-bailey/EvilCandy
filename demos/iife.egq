// Expect output "1 + 2 is 3"
let a = (function(a, b) { return a + b; })(1, 2);
print("1 + 2 is {}".format(a));

// Expect output "args are alice and bob"
(function(a, b) { print("args are {} and {}".format(a, b)); })("alice", "bob");

// Test closure
(function() {
    let multer = function(n) {
        return ``(x, :n=n) x * n``;
    };

    let doubler = multer(2);
    let tripler = multer(3);

    print("testing simple closure");
    print("\t11 times 2 is {}".format(doubler(11)));
    print("\t11 times 3 is {}".format(tripler(11)));
})();

// Test ugly closure
(function() {
    let multer2 = function(n) {
        return {
            n: n,
            __callable__: ``(x) x * n``
        };
    };

    let quadler = multer2(4);
    let quintler = multer2(5);

    print("testing ugly-but-more-correct closure");
    print("\t11 times 4 is {}".format(quadler(11)));
    print("\t11 times 5 is {}".format(quintler(11)));
})();

// : vim: set syntax=javascript :
